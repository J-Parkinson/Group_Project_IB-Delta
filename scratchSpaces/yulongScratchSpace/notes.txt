Structure: app->windows->widgets{label, box, buttons, table, line, bar...}
Layout: QGridLayout, can nest layouts
addWidget(Widget, row, col)/(Widget, row, col, rowspan, colspan) & alignment

Appearance: Qt Style sheet
Style: different style for different OS/ app.setStyle

About button:
Absolute position: move(x,y);
Size: resize(w,h);
Add to frame: QPushButton(text, frame)
Button style: button.setStyleSheet('QPushButton {background-color: #A3C1DA; color: red;}')
QStackedWidget

I/O and drawing:
QMouseEvents
QPainter: write things in paintEvent(), activate it by calling self.update()

Library:OS

https://docs.google.com/document/d/1q7I-9du1ZoeMD09l301Q9pI_6jJUPRgYLEeV0w6grRI/edit

This stage:
Function call when each button is hit (done!!)
more layout, button aligns (done!!)
Color, style, appearance -- Suzie
Pictures, icons --Suzie
setStyleSheet('background-color:rgb(248,154,121); color:black')

Next stage:
Upload page Done, not that hard
Resizable Done, easy

3rd stage:
the dragging page
Process of reaching the dragging page:
User choose the input file-> (done!)
Clicks "Read page" button -> (done!)
Sees a useless-but-makes-you-feel-the-app-is-quite-reliable progress bar (doing it later...)
Sees the dragging page
warns users when dropped some non-pdf things
1st time opening the app, shows tutorial automatically
Read and show csv file -- Suzie

New things from dragging page:
Confirm button clicked
The backend running...
Something to show the user while it is running
(fun butterfly facts?) (fun computer science facts???) client says both!
Save file page shown (already done!)

Another function: split to standard format button
design and implement the page......


Far, far away stage:
add preview page (harder than it looks like, procrastinating...)

Optional things:
Dynamic tutorial

Some questions:
Exit button? Home button & page?
